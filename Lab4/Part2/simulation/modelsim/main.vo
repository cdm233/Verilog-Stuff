// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.0.0 Build 614 04/24/2018 SJ Lite Edition"

// DATE "10/27/2021 18:17:07"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module part2 (
	Clock,
	Reset_b,
	Data,
	\Function ,
	ALUout);
input 	Clock;
input 	[2:0] Reset_b;
input 	[3:0] Data;
input 	[2:0] \Function ;
output 	[7:0] ALUout;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Mult0~16 ;
wire \Mult0~17 ;
wire \Mult0~18 ;
wire \Mult0~19 ;
wire \Mult0~20 ;
wire \Mult0~21 ;
wire \Mult0~22 ;
wire \Mult0~23 ;
wire \Mult0~24 ;
wire \Mult0~25 ;
wire \Mult0~26 ;
wire \Mult0~27 ;
wire \Mult0~28 ;
wire \Mult0~29 ;
wire \Mult0~30 ;
wire \Mult0~31 ;
wire \Mult0~32 ;
wire \Mult0~33 ;
wire \Mult0~34 ;
wire \Mult0~35 ;
wire \Mult0~36 ;
wire \Mult0~37 ;
wire \Mult0~38 ;
wire \Mult0~39 ;
wire \Mult0~40 ;
wire \Mult0~41 ;
wire \Mult0~42 ;
wire \Mult0~43 ;
wire \Mult0~44 ;
wire \Mult0~45 ;
wire \Mult0~46 ;
wire \Mult0~47 ;
wire \Mult0~48 ;
wire \Mult0~49 ;
wire \Mult0~50 ;
wire \Mult0~51 ;
wire \Mult0~52 ;
wire \Mult0~53 ;
wire \Mult0~54 ;
wire \Mult0~55 ;
wire \Mult0~56 ;
wire \Mult0~57 ;
wire \Mult0~58 ;
wire \Mult0~59 ;
wire \Mult0~60 ;
wire \Mult0~61 ;
wire \Mult0~62 ;
wire \Mult0~63 ;
wire \Mult0~64 ;
wire \Mult0~65 ;
wire \Mult0~66 ;
wire \Mult0~67 ;
wire \Mult0~68 ;
wire \Mult0~69 ;
wire \Mult0~70 ;
wire \Mult0~71 ;
wire \ripple1|adder2|c_out~0_combout ;
wire \Clock~input_o ;
wire \Reset_b[0]~input_o ;
wire \Reset_b[1]~input_o ;
wire \Reset_b[2]~input_o ;
wire \Data[0]~input_o ;
wire \Data[1]~input_o ;
wire \Add0~1_sumout ;
wire \Function[1]~input_o ;
wire \Function[2]~input_o ;
wire \Data[2]~input_o ;
wire \Data[3]~input_o ;
wire \Mux7~0_combout ;
wire \Mux7~1_combout ;
wire \Function[0]~input_o ;
wire \Mult0~8_resulta ;
wire \Mux7~2_combout ;
wire \Mux7~3_combout ;
wire \Add0~2 ;
wire \Add0~5_sumout ;
wire \Mux6~0_combout ;
wire \Mux4~0_combout ;
wire \Mux6~1_combout ;
wire \Mult0~9 ;
wire \Mux6~2_combout ;
wire \Add0~6 ;
wire \Add0~9_sumout ;
wire \ShiftLeft0~0_combout ;
wire \Mux5~0_combout ;
wire \Mult0~10 ;
wire \Mux5~1_combout ;
wire \Add0~10 ;
wire \Add0~13_sumout ;
wire \ShiftLeft0~1_combout ;
wire \Mux4~1_combout ;
wire \Mux4~2_combout ;
wire \Mult0~11 ;
wire \Mux4~3_combout ;
wire \Mux3~3_combout ;
wire \ShiftLeft0~2_combout ;
wire \Mux3~2_combout ;
wire \Mux3~4_combout ;
wire \Mux3~1_combout ;
wire \Mux3~10_combout ;
wire \Mux3~0_combout ;
wire \Add0~14 ;
wire \Add0~17_sumout ;
wire \Mux3~5_combout ;
wire \Mux2~0_combout ;
wire \Mult0~12 ;
wire \Mux3~6_combout ;
wire \Mult0~13 ;
wire \Mux2~2_combout ;
wire \Mux2~3_combout ;
wire \Mux2~1_combout ;
wire \Mult0~14 ;
wire \Mux1~1_combout ;
wire \Mux1~0_combout ;
wire \Mult0~15 ;
wire \Mux0~0_combout ;
wire \Mux0~1_combout ;
wire [7:0] \reg1|q ;

wire [63:0] \Mult0~8_RESULTA_bus ;

assign \Mult0~8_resulta  = \Mult0~8_RESULTA_bus [0];
assign \Mult0~9  = \Mult0~8_RESULTA_bus [1];
assign \Mult0~10  = \Mult0~8_RESULTA_bus [2];
assign \Mult0~11  = \Mult0~8_RESULTA_bus [3];
assign \Mult0~12  = \Mult0~8_RESULTA_bus [4];
assign \Mult0~13  = \Mult0~8_RESULTA_bus [5];
assign \Mult0~14  = \Mult0~8_RESULTA_bus [6];
assign \Mult0~15  = \Mult0~8_RESULTA_bus [7];
assign \Mult0~16  = \Mult0~8_RESULTA_bus [8];
assign \Mult0~17  = \Mult0~8_RESULTA_bus [9];
assign \Mult0~18  = \Mult0~8_RESULTA_bus [10];
assign \Mult0~19  = \Mult0~8_RESULTA_bus [11];
assign \Mult0~20  = \Mult0~8_RESULTA_bus [12];
assign \Mult0~21  = \Mult0~8_RESULTA_bus [13];
assign \Mult0~22  = \Mult0~8_RESULTA_bus [14];
assign \Mult0~23  = \Mult0~8_RESULTA_bus [15];
assign \Mult0~24  = \Mult0~8_RESULTA_bus [16];
assign \Mult0~25  = \Mult0~8_RESULTA_bus [17];
assign \Mult0~26  = \Mult0~8_RESULTA_bus [18];
assign \Mult0~27  = \Mult0~8_RESULTA_bus [19];
assign \Mult0~28  = \Mult0~8_RESULTA_bus [20];
assign \Mult0~29  = \Mult0~8_RESULTA_bus [21];
assign \Mult0~30  = \Mult0~8_RESULTA_bus [22];
assign \Mult0~31  = \Mult0~8_RESULTA_bus [23];
assign \Mult0~32  = \Mult0~8_RESULTA_bus [24];
assign \Mult0~33  = \Mult0~8_RESULTA_bus [25];
assign \Mult0~34  = \Mult0~8_RESULTA_bus [26];
assign \Mult0~35  = \Mult0~8_RESULTA_bus [27];
assign \Mult0~36  = \Mult0~8_RESULTA_bus [28];
assign \Mult0~37  = \Mult0~8_RESULTA_bus [29];
assign \Mult0~38  = \Mult0~8_RESULTA_bus [30];
assign \Mult0~39  = \Mult0~8_RESULTA_bus [31];
assign \Mult0~40  = \Mult0~8_RESULTA_bus [32];
assign \Mult0~41  = \Mult0~8_RESULTA_bus [33];
assign \Mult0~42  = \Mult0~8_RESULTA_bus [34];
assign \Mult0~43  = \Mult0~8_RESULTA_bus [35];
assign \Mult0~44  = \Mult0~8_RESULTA_bus [36];
assign \Mult0~45  = \Mult0~8_RESULTA_bus [37];
assign \Mult0~46  = \Mult0~8_RESULTA_bus [38];
assign \Mult0~47  = \Mult0~8_RESULTA_bus [39];
assign \Mult0~48  = \Mult0~8_RESULTA_bus [40];
assign \Mult0~49  = \Mult0~8_RESULTA_bus [41];
assign \Mult0~50  = \Mult0~8_RESULTA_bus [42];
assign \Mult0~51  = \Mult0~8_RESULTA_bus [43];
assign \Mult0~52  = \Mult0~8_RESULTA_bus [44];
assign \Mult0~53  = \Mult0~8_RESULTA_bus [45];
assign \Mult0~54  = \Mult0~8_RESULTA_bus [46];
assign \Mult0~55  = \Mult0~8_RESULTA_bus [47];
assign \Mult0~56  = \Mult0~8_RESULTA_bus [48];
assign \Mult0~57  = \Mult0~8_RESULTA_bus [49];
assign \Mult0~58  = \Mult0~8_RESULTA_bus [50];
assign \Mult0~59  = \Mult0~8_RESULTA_bus [51];
assign \Mult0~60  = \Mult0~8_RESULTA_bus [52];
assign \Mult0~61  = \Mult0~8_RESULTA_bus [53];
assign \Mult0~62  = \Mult0~8_RESULTA_bus [54];
assign \Mult0~63  = \Mult0~8_RESULTA_bus [55];
assign \Mult0~64  = \Mult0~8_RESULTA_bus [56];
assign \Mult0~65  = \Mult0~8_RESULTA_bus [57];
assign \Mult0~66  = \Mult0~8_RESULTA_bus [58];
assign \Mult0~67  = \Mult0~8_RESULTA_bus [59];
assign \Mult0~68  = \Mult0~8_RESULTA_bus [60];
assign \Mult0~69  = \Mult0~8_RESULTA_bus [61];
assign \Mult0~70  = \Mult0~8_RESULTA_bus [62];
assign \Mult0~71  = \Mult0~8_RESULTA_bus [63];

RCA ripple1(
	.q_1(\reg1|q [1]),
	.q_0(\reg1|q [0]),
	.c_out(\ripple1|adder2|c_out~0_combout ),
	.Data_0(\Data[0]~input_o ),
	.Data_1(\Data[1]~input_o ),
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

reg8_bits reg1(
	.q_1(\reg1|q [1]),
	.q_2(\reg1|q [2]),
	.q_3(\reg1|q [3]),
	.q_0(\reg1|q [0]),
	.q_4(\reg1|q [4]),
	.q_5(\reg1|q [5]),
	.q_6(\reg1|q [6]),
	.q_7(\reg1|q [7]),
	.Mux3(\Mux3~6_combout ),
	.Mux4(\Mux4~3_combout ),
	.Mux5(\Mux5~1_combout ),
	.Mux6(\Mux6~2_combout ),
	.Mux7(\Mux7~3_combout ),
	.Mux2(\Mux2~1_combout ),
	.Mux1(\Mux1~0_combout ),
	.Mux0(\Mux0~1_combout ),
	.Clock(\Clock~input_o ),
	.Reset_b_0(\Reset_b[0]~input_o ),
	.Reset_b_1(\Reset_b[1]~input_o ),
	.Reset_b_2(\Reset_b[2]~input_o ),
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

cyclonev_io_ibuf \Clock~input (
	.i(Clock),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Clock~input_o ));
// synopsys translate_off
defparam \Clock~input .bus_hold = "false";
defparam \Clock~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Reset_b[0]~input (
	.i(Reset_b[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Reset_b[0]~input_o ));
// synopsys translate_off
defparam \Reset_b[0]~input .bus_hold = "false";
defparam \Reset_b[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Reset_b[1]~input (
	.i(Reset_b[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Reset_b[1]~input_o ));
// synopsys translate_off
defparam \Reset_b[1]~input .bus_hold = "false";
defparam \Reset_b[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Reset_b[2]~input (
	.i(Reset_b[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Reset_b[2]~input_o ));
// synopsys translate_off
defparam \Reset_b[2]~input .bus_hold = "false";
defparam \Reset_b[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_obuf \ALUout[0]~output (
	.i(\Mux7~3_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(ALUout[0]),
	.obar());
// synopsys translate_off
defparam \ALUout[0]~output .bus_hold = "false";
defparam \ALUout[0]~output .open_drain_output = "false";
defparam \ALUout[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ALUout[1]~output (
	.i(\Mux6~2_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(ALUout[1]),
	.obar());
// synopsys translate_off
defparam \ALUout[1]~output .bus_hold = "false";
defparam \ALUout[1]~output .open_drain_output = "false";
defparam \ALUout[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ALUout[2]~output (
	.i(\Mux5~1_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(ALUout[2]),
	.obar());
// synopsys translate_off
defparam \ALUout[2]~output .bus_hold = "false";
defparam \ALUout[2]~output .open_drain_output = "false";
defparam \ALUout[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ALUout[3]~output (
	.i(\Mux4~3_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(ALUout[3]),
	.obar());
// synopsys translate_off
defparam \ALUout[3]~output .bus_hold = "false";
defparam \ALUout[3]~output .open_drain_output = "false";
defparam \ALUout[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ALUout[4]~output (
	.i(\Mux3~6_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(ALUout[4]),
	.obar());
// synopsys translate_off
defparam \ALUout[4]~output .bus_hold = "false";
defparam \ALUout[4]~output .open_drain_output = "false";
defparam \ALUout[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ALUout[5]~output (
	.i(\Mux2~1_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(ALUout[5]),
	.obar());
// synopsys translate_off
defparam \ALUout[5]~output .bus_hold = "false";
defparam \ALUout[5]~output .open_drain_output = "false";
defparam \ALUout[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ALUout[6]~output (
	.i(\Mux1~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(ALUout[6]),
	.obar());
// synopsys translate_off
defparam \ALUout[6]~output .bus_hold = "false";
defparam \ALUout[6]~output .open_drain_output = "false";
defparam \ALUout[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ALUout[7]~output (
	.i(\Mux0~1_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(ALUout[7]),
	.obar());
// synopsys translate_off
defparam \ALUout[7]~output .bus_hold = "false";
defparam \ALUout[7]~output .open_drain_output = "false";
defparam \ALUout[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \Data[0]~input (
	.i(Data[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Data[0]~input_o ));
// synopsys translate_off
defparam \Data[0]~input .bus_hold = "false";
defparam \Data[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Data[1]~input (
	.i(Data[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Data[1]~input_o ));
// synopsys translate_off
defparam \Data[1]~input .bus_hold = "false";
defparam \Data[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Add0~1 (
// Equation(s):
// \Add0~1_sumout  = SUM(( q_0 ) + ( \Data[0]~input_o  ) + ( !VCC ))
// \Add0~2  = CARRY(( q_0 ) + ( \Data[0]~input_o  ) + ( !VCC ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\reg1|q [0]),
	.datae(gnd),
	.dataf(!\Data[0]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~1_sumout ),
	.cout(\Add0~2 ),
	.shareout());
// synopsys translate_off
defparam \Add0~1 .extended_lut = "off";
defparam \Add0~1 .lut_mask = 64'h0000FF00000000FF;
defparam \Add0~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \Function[1]~input (
	.i(\Function [1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Function[1]~input_o ));
// synopsys translate_off
defparam \Function[1]~input .bus_hold = "false";
defparam \Function[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Function[2]~input (
	.i(\Function [2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Function[2]~input_o ));
// synopsys translate_off
defparam \Function[2]~input .bus_hold = "false";
defparam \Function[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Data[2]~input (
	.i(Data[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Data[2]~input_o ));
// synopsys translate_off
defparam \Data[2]~input .bus_hold = "false";
defparam \Data[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Data[3]~input (
	.i(Data[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Data[3]~input_o ));
// synopsys translate_off
defparam \Data[3]~input .bus_hold = "false";
defparam \Data[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Mux7~0 (
// Equation(s):
// \Mux7~0_combout  = ( \Data[2]~input_o  & ( \Data[3]~input_o  & ( (!\Function[1]~input_o  & (\Add0~1_sumout  & (!\Function[2]~input_o ))) # (\Function[1]~input_o  & (((!\Function[2]~input_o ) # (q_0)))) ) ) ) # ( !\Data[2]~input_o  & ( \Data[3]~input_o  & 
// ( (!\Function[1]~input_o  & (\Add0~1_sumout  & (!\Function[2]~input_o ))) # (\Function[1]~input_o  & (((!\Function[2]~input_o ) # (q_0)))) ) ) ) # ( \Data[2]~input_o  & ( !\Data[3]~input_o  & ( (!\Function[1]~input_o  & (\Add0~1_sumout  & 
// (!\Function[2]~input_o ))) # (\Function[1]~input_o  & (((!\Function[2]~input_o ) # (q_0)))) ) ) ) # ( !\Data[2]~input_o  & ( !\Data[3]~input_o  & ( (!\Function[1]~input_o  & ((!\Function[2]~input_o  & (\Add0~1_sumout )) # (\Function[2]~input_o  & 
// ((q_0))))) # (\Function[1]~input_o  & (((q_0)))) ) ) )

	.dataa(!\Add0~1_sumout ),
	.datab(!\Function[1]~input_o ),
	.datac(!\Function[2]~input_o ),
	.datad(!\reg1|q [0]),
	.datae(!\Data[2]~input_o ),
	.dataf(!\Data[3]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux7~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux7~0 .extended_lut = "off";
defparam \Mux7~0 .lut_mask = 64'h407F707370737073;
defparam \Mux7~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux7~1 (
// Equation(s):
// \Mux7~1_combout  = ( \Data[1]~input_o  & ( \Mux7~0_combout  ) ) # ( !\Data[1]~input_o  & ( \Mux7~0_combout  ) ) # ( \Data[1]~input_o  & ( !\Mux7~0_combout  ) ) # ( !\Data[1]~input_o  & ( !\Mux7~0_combout  & ( (((\Data[0]~input_o ) # (q_3)) # (q_2)) # 
// (q_1) ) ) )

	.dataa(!\reg1|q [1]),
	.datab(!\reg1|q [2]),
	.datac(!\reg1|q [3]),
	.datad(!\Data[0]~input_o ),
	.datae(!\Data[1]~input_o ),
	.dataf(!\Mux7~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux7~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux7~1 .extended_lut = "off";
defparam \Mux7~1 .lut_mask = 64'h7FFFFFFFFFFFFFFF;
defparam \Mux7~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \Function[0]~input (
	.i(\Function [0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Function[0]~input_o ));
// synopsys translate_off
defparam \Function[0]~input .bus_hold = "false";
defparam \Function[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_mac \Mult0~8 (
	.sub(gnd),
	.negate(gnd),
	.accumulate(gnd),
	.loadconst(gnd),
	.ax({\Data[3]~input_o ,\Data[2]~input_o ,\Data[1]~input_o ,\Data[0]~input_o }),
	.ay({\reg1|q [3],\reg1|q [2],\reg1|q [1],\reg1|q [0]}),
	.az(26'b00000000000000000000000000),
	.bx(18'b000000000000000000),
	.by(19'b0000000000000000000),
	.bz(18'b000000000000000000),
	.coefsela(3'b000),
	.coefselb(3'b000),
	.clk(3'b000),
	.aclr(2'b00),
	.ena(3'b111),
	.scanin(27'b000000000000000000000000000),
	.chainin(1'b0),
	.dftout(),
	.resulta(\Mult0~8_RESULTA_bus ),
	.resultb(),
	.scanout(),
	.chainout());
// synopsys translate_off
defparam \Mult0~8 .accumulate_clock = "none";
defparam \Mult0~8 .ax_clock = "none";
defparam \Mult0~8 .ax_width = 4;
defparam \Mult0~8 .ay_scan_in_clock = "none";
defparam \Mult0~8 .ay_scan_in_width = 4;
defparam \Mult0~8 .ay_use_scan_in = "false";
defparam \Mult0~8 .az_clock = "none";
defparam \Mult0~8 .bx_clock = "none";
defparam \Mult0~8 .by_clock = "none";
defparam \Mult0~8 .by_use_scan_in = "false";
defparam \Mult0~8 .bz_clock = "none";
defparam \Mult0~8 .coef_a_0 = 0;
defparam \Mult0~8 .coef_a_1 = 0;
defparam \Mult0~8 .coef_a_2 = 0;
defparam \Mult0~8 .coef_a_3 = 0;
defparam \Mult0~8 .coef_a_4 = 0;
defparam \Mult0~8 .coef_a_5 = 0;
defparam \Mult0~8 .coef_a_6 = 0;
defparam \Mult0~8 .coef_a_7 = 0;
defparam \Mult0~8 .coef_b_0 = 0;
defparam \Mult0~8 .coef_b_1 = 0;
defparam \Mult0~8 .coef_b_2 = 0;
defparam \Mult0~8 .coef_b_3 = 0;
defparam \Mult0~8 .coef_b_4 = 0;
defparam \Mult0~8 .coef_b_5 = 0;
defparam \Mult0~8 .coef_b_6 = 0;
defparam \Mult0~8 .coef_b_7 = 0;
defparam \Mult0~8 .coef_sel_a_clock = "none";
defparam \Mult0~8 .coef_sel_b_clock = "none";
defparam \Mult0~8 .delay_scan_out_ay = "false";
defparam \Mult0~8 .delay_scan_out_by = "false";
defparam \Mult0~8 .enable_double_accum = "false";
defparam \Mult0~8 .load_const_clock = "none";
defparam \Mult0~8 .load_const_value = 0;
defparam \Mult0~8 .mode_sub_location = 0;
defparam \Mult0~8 .negate_clock = "none";
defparam \Mult0~8 .operand_source_max = "input";
defparam \Mult0~8 .operand_source_may = "input";
defparam \Mult0~8 .operand_source_mbx = "input";
defparam \Mult0~8 .operand_source_mby = "input";
defparam \Mult0~8 .operation_mode = "m9x9";
defparam \Mult0~8 .output_clock = "none";
defparam \Mult0~8 .preadder_subtract_a = "false";
defparam \Mult0~8 .preadder_subtract_b = "false";
defparam \Mult0~8 .result_a_width = 64;
defparam \Mult0~8 .signed_max = "false";
defparam \Mult0~8 .signed_may = "false";
defparam \Mult0~8 .signed_mbx = "false";
defparam \Mult0~8 .signed_mby = "false";
defparam \Mult0~8 .sub_clock = "none";
defparam \Mult0~8 .use_chainadder = "false";
// synopsys translate_on

cyclonev_lcell_comb \Mux7~2 (
// Equation(s):
// \Mux7~2_combout  = ( \Data[1]~input_o  & ( \Mux7~0_combout  & ( (!\Function[1]~input_o  & (!\Function[2]~input_o )) # (\Function[1]~input_o  & ((\Function[0]~input_o ) # (\Function[2]~input_o ))) ) ) ) # ( !\Data[1]~input_o  & ( \Mux7~0_combout  & ( 
// (!\Function[1]~input_o  & ((!\Function[2]~input_o ) # ((\Function[0]~input_o  & !\Data[0]~input_o )))) # (\Function[1]~input_o  & (((\Function[0]~input_o )) # (\Function[2]~input_o ))) ) ) ) # ( \Data[1]~input_o  & ( !\Mux7~0_combout  & ( 
// (\Function[1]~input_o  & (!\Function[2]~input_o  $ (!\Function[0]~input_o ))) ) ) ) # ( !\Data[1]~input_o  & ( !\Mux7~0_combout  & ( (\Function[1]~input_o  & (!\Function[2]~input_o  $ (!\Function[0]~input_o ))) ) ) )

	.dataa(!\Function[1]~input_o ),
	.datab(!\Function[2]~input_o ),
	.datac(!\Function[0]~input_o ),
	.datad(!\Data[0]~input_o ),
	.datae(!\Data[1]~input_o ),
	.dataf(!\Mux7~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux7~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux7~2 .extended_lut = "off";
defparam \Mux7~2 .lut_mask = 64'h141414149F9D9D9D;
defparam \Mux7~2 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux7~3 (
// Equation(s):
// \Mux7~3_combout  = ( !\Mux7~2_combout  & ( (q_0 & (\Mux7~1_combout  & (\Mux7~0_combout  & ((!\Function[2]~input_o ))))) ) ) # ( \Mux7~2_combout  & ( ((!\Function[2]~input_o  & (\Mux7~1_combout )) # (\Function[2]~input_o  & (((\Mult0~8_resulta ) # 
// (\Function[0]~input_o ))))) ) )

	.dataa(!\reg1|q [0]),
	.datab(!\Mux7~1_combout ),
	.datac(!\Function[0]~input_o ),
	.datad(!\Mult0~8_resulta ),
	.datae(!\Mux7~2_combout ),
	.dataf(!\Function[2]~input_o ),
	.datag(!\Mux7~0_combout ),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux7~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux7~3 .extended_lut = "on";
defparam \Mux7~3 .lut_mask = 64'h0101333300000FFF;
defparam \Mux7~3 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Add0~5 (
// Equation(s):
// \Add0~5_sumout  = SUM(( q_1 ) + ( \Data[1]~input_o  ) + ( \Add0~2  ))
// \Add0~6  = CARRY(( q_1 ) + ( \Data[1]~input_o  ) + ( \Add0~2  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\reg1|q [1]),
	.datae(gnd),
	.dataf(!\Data[1]~input_o ),
	.datag(gnd),
	.cin(\Add0~2 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~5_sumout ),
	.cout(\Add0~6 ),
	.shareout());
// synopsys translate_off
defparam \Add0~5 .extended_lut = "off";
defparam \Add0~5 .lut_mask = 64'h0000FF00000000FF;
defparam \Add0~5 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux6~0 (
// Equation(s):
// \Mux6~0_combout  = (\Function[0]~input_o  & ((!\Function[2]~input_o ) # ((!\Data[2]~input_o  & !\Data[3]~input_o ))))

	.dataa(!\Function[2]~input_o ),
	.datab(!\Data[2]~input_o ),
	.datac(!\Data[3]~input_o ),
	.datad(!\Function[0]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux6~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux6~0 .extended_lut = "off";
defparam \Mux6~0 .lut_mask = 64'h00EA00EA00EA00EA;
defparam \Mux6~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux4~0 (
// Equation(s):
// \Mux4~0_combout  = ( \Function[0]~input_o  & ( (!\Function[1]~input_o  & (\Function[2]~input_o  & (!\Data[2]~input_o  & !\Data[3]~input_o ))) ) ) # ( !\Function[0]~input_o  & ( (!\Function[1]~input_o  & !\Function[2]~input_o ) ) )

	.dataa(!\Function[1]~input_o ),
	.datab(!\Function[2]~input_o ),
	.datac(!\Data[2]~input_o ),
	.datad(!\Data[3]~input_o ),
	.datae(!\Function[0]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux4~0 .extended_lut = "off";
defparam \Mux4~0 .lut_mask = 64'h8888200088882000;
defparam \Mux4~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux6~1 (
// Equation(s):
// \Mux6~1_combout  = ( \Mux6~0_combout  & ( \Mux4~0_combout  & ( (!\Data[1]~input_o  & ((!\Data[0]~input_o  & ((q_1))) # (\Data[0]~input_o  & (q_0)))) ) ) ) # ( !\Mux6~0_combout  & ( \Mux4~0_combout  & ( !\Data[1]~input_o  $ (!q_1 $ (((q_0 & 
// \Data[0]~input_o )))) ) ) )

	.dataa(!\reg1|q [0]),
	.datab(!\Data[0]~input_o ),
	.datac(!\Data[1]~input_o ),
	.datad(!\reg1|q [1]),
	.datae(!\Mux6~0_combout ),
	.dataf(!\Mux4~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux6~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux6~1 .extended_lut = "off";
defparam \Mux6~1 .lut_mask = 64'h000000001EE110D0;
defparam \Mux6~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux6~2 (
// Equation(s):
// \Mux6~2_combout  = ( !\Function[0]~input_o  & ( ((\Function[1]~input_o  & ((!\Function[2]~input_o  & (q_1)) # (\Function[2]~input_o  & ((\Mult0~9 )))))) # (\Mux6~1_combout ) ) ) # ( \Function[0]~input_o  & ( ((!\Function[2]~input_o  & (((\Add0~5_sumout  & 
// !\Function[1]~input_o )))) # (\Function[2]~input_o  & (q_1 & ((\Function[1]~input_o ))))) # (\Mux6~1_combout ) ) )

	.dataa(!\reg1|q [1]),
	.datab(!\Function[2]~input_o ),
	.datac(!\Add0~5_sumout ),
	.datad(!\Function[1]~input_o ),
	.datae(!\Function[0]~input_o ),
	.dataf(!\Mux6~1_combout ),
	.datag(!\Mult0~9 ),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux6~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux6~2 .extended_lut = "on";
defparam \Mux6~2 .lut_mask = 64'h00470C11FFFFFFFF;
defparam \Mux6~2 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Add0~9 (
// Equation(s):
// \Add0~9_sumout  = SUM(( q_2 ) + ( \Data[2]~input_o  ) + ( \Add0~6  ))
// \Add0~10  = CARRY(( q_2 ) + ( \Data[2]~input_o  ) + ( \Add0~6  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\reg1|q [2]),
	.datae(gnd),
	.dataf(!\Data[2]~input_o ),
	.datag(gnd),
	.cin(\Add0~6 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~9_sumout ),
	.cout(\Add0~10 ),
	.shareout());
// synopsys translate_off
defparam \Add0~9 .extended_lut = "off";
defparam \Add0~9 .lut_mask = 64'h0000FF00000000FF;
defparam \Add0~9 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \ShiftLeft0~0 (
// Equation(s):
// \ShiftLeft0~0_combout  = ( q_2 & ( (!\Data[0]~input_o  & (((!\Data[1]~input_o )) # (q_0))) # (\Data[0]~input_o  & (((!\Data[1]~input_o  & q_1)))) ) ) # ( !q_2 & ( (!\Data[0]~input_o  & (q_0 & (\Data[1]~input_o ))) # (\Data[0]~input_o  & 
// (((!\Data[1]~input_o  & q_1)))) ) )

	.dataa(!\reg1|q [0]),
	.datab(!\Data[0]~input_o ),
	.datac(!\Data[1]~input_o ),
	.datad(!\reg1|q [1]),
	.datae(!\reg1|q [2]),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\ShiftLeft0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \ShiftLeft0~0 .extended_lut = "off";
defparam \ShiftLeft0~0 .lut_mask = 64'h0434C4F40434C4F4;
defparam \ShiftLeft0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux5~0 (
// Equation(s):
// \Mux5~0_combout  = ( \ShiftLeft0~0_combout  & ( c_out & ( (\Mux4~0_combout  & ((!\Data[2]~input_o  $ (q_2)) # (\Mux6~0_combout ))) ) ) ) # ( !\ShiftLeft0~0_combout  & ( c_out & ( (!\Mux6~0_combout  & (\Mux4~0_combout  & (!\Data[2]~input_o  $ (q_2)))) ) ) 
// ) # ( \ShiftLeft0~0_combout  & ( !c_out & ( (\Mux4~0_combout  & ((!\Data[2]~input_o  $ (!q_2)) # (\Mux6~0_combout ))) ) ) ) # ( !\ShiftLeft0~0_combout  & ( !c_out & ( (!\Mux6~0_combout  & (\Mux4~0_combout  & (!\Data[2]~input_o  $ (!q_2)))) ) ) )

	.dataa(!\Data[2]~input_o ),
	.datab(!\reg1|q [2]),
	.datac(!\Mux6~0_combout ),
	.datad(!\Mux4~0_combout ),
	.datae(!\ShiftLeft0~0_combout ),
	.dataf(!\ripple1|adder2|c_out~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux5~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux5~0 .extended_lut = "off";
defparam \Mux5~0 .lut_mask = 64'h0060006F0090009F;
defparam \Mux5~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux5~1 (
// Equation(s):
// \Mux5~1_combout  = ( !\Function[0]~input_o  & ( ((\Function[1]~input_o  & ((!\Function[2]~input_o  & (q_2)) # (\Function[2]~input_o  & ((\Mult0~10 )))))) # (\Mux5~0_combout ) ) ) # ( \Function[0]~input_o  & ( ((!\Function[2]~input_o  & (((\Add0~9_sumout  
// & !\Function[1]~input_o )))) # (\Function[2]~input_o  & (q_2 & ((\Function[1]~input_o ))))) # (\Mux5~0_combout ) ) )

	.dataa(!\reg1|q [2]),
	.datab(!\Function[2]~input_o ),
	.datac(!\Add0~9_sumout ),
	.datad(!\Function[1]~input_o ),
	.datae(!\Function[0]~input_o ),
	.dataf(!\Mux5~0_combout ),
	.datag(!\Mult0~10 ),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux5~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux5~1 .extended_lut = "on";
defparam \Mux5~1 .lut_mask = 64'h00470C11FFFFFFFF;
defparam \Mux5~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Add0~13 (
// Equation(s):
// \Add0~13_sumout  = SUM(( q_3 ) + ( \Data[3]~input_o  ) + ( \Add0~10  ))
// \Add0~14  = CARRY(( q_3 ) + ( \Data[3]~input_o  ) + ( \Add0~10  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\reg1|q [3]),
	.datae(gnd),
	.dataf(!\Data[3]~input_o ),
	.datag(gnd),
	.cin(\Add0~10 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~13_sumout ),
	.cout(\Add0~14 ),
	.shareout());
// synopsys translate_off
defparam \Add0~13 .extended_lut = "off";
defparam \Add0~13 .lut_mask = 64'h0000FF00000000FF;
defparam \Add0~13 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \ShiftLeft0~1 (
// Equation(s):
// \ShiftLeft0~1_combout  = ( \Data[1]~input_o  & ( \Data[0]~input_o  & ( q_0 ) ) ) # ( !\Data[1]~input_o  & ( \Data[0]~input_o  & ( q_2 ) ) ) # ( \Data[1]~input_o  & ( !\Data[0]~input_o  & ( q_1 ) ) ) # ( !\Data[1]~input_o  & ( !\Data[0]~input_o  & ( q_3 ) 
// ) )

	.dataa(!\reg1|q [3]),
	.datab(!\reg1|q [1]),
	.datac(!\reg1|q [2]),
	.datad(!\reg1|q [0]),
	.datae(!\Data[1]~input_o ),
	.dataf(!\Data[0]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\ShiftLeft0~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \ShiftLeft0~1 .extended_lut = "off";
defparam \ShiftLeft0~1 .lut_mask = 64'h555533330F0F00FF;
defparam \ShiftLeft0~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux4~1 (
// Equation(s):
// \Mux4~1_combout  = ( c_out & ( !\Data[3]~input_o  $ (!q_3 $ (((q_2) # (\Data[2]~input_o )))) ) ) # ( !c_out & ( !\Data[3]~input_o  $ (!q_3 $ (((\Data[2]~input_o  & q_2)))) ) )

	.dataa(!\Data[2]~input_o ),
	.datab(!\Data[3]~input_o ),
	.datac(!\reg1|q [2]),
	.datad(!\reg1|q [3]),
	.datae(!\ripple1|adder2|c_out~0_combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux4~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux4~1 .extended_lut = "off";
defparam \Mux4~1 .lut_mask = 64'h36C96C9336C96C93;
defparam \Mux4~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux4~2 (
// Equation(s):
// \Mux4~2_combout  = (\Mux4~0_combout  & ((!\Mux6~0_combout  & ((\Mux4~1_combout ))) # (\Mux6~0_combout  & (\ShiftLeft0~1_combout ))))

	.dataa(!\Mux6~0_combout ),
	.datab(!\Mux4~0_combout ),
	.datac(!\ShiftLeft0~1_combout ),
	.datad(!\Mux4~1_combout ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux4~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux4~2 .extended_lut = "off";
defparam \Mux4~2 .lut_mask = 64'h0123012301230123;
defparam \Mux4~2 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux4~3 (
// Equation(s):
// \Mux4~3_combout  = ( !\Function[0]~input_o  & ( ((\Function[1]~input_o  & ((!\Function[2]~input_o  & (q_3)) # (\Function[2]~input_o  & ((\Mult0~11 )))))) # (\Mux4~2_combout ) ) ) # ( \Function[0]~input_o  & ( ((!\Function[2]~input_o  & (((\Add0~13_sumout  
// & !\Function[1]~input_o )))) # (\Function[2]~input_o  & (q_3 & ((\Function[1]~input_o ))))) # (\Mux4~2_combout ) ) )

	.dataa(!\reg1|q [3]),
	.datab(!\Function[2]~input_o ),
	.datac(!\Add0~13_sumout ),
	.datad(!\Function[1]~input_o ),
	.datae(!\Function[0]~input_o ),
	.dataf(!\Mux4~2_combout ),
	.datag(!\Mult0~11 ),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux4~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux4~3 .extended_lut = "on";
defparam \Mux4~3 .lut_mask = 64'h00470C11FFFFFFFF;
defparam \Mux4~3 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux3~3 (
// Equation(s):
// \Mux3~3_combout  = ( q_3 & ( (!\Function[1]~input_o  & (!\Function[2]~input_o  & (\Data[3]~input_o  & !\Function[0]~input_o ))) ) )

	.dataa(!\Function[1]~input_o ),
	.datab(!\Function[2]~input_o ),
	.datac(!\Data[3]~input_o ),
	.datad(!\Function[0]~input_o ),
	.datae(!\reg1|q [3]),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux3~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux3~3 .extended_lut = "off";
defparam \Mux3~3 .lut_mask = 64'h0000080000000800;
defparam \Mux3~3 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \ShiftLeft0~2 (
// Equation(s):
// \ShiftLeft0~2_combout  = (!\Data[0]~input_o  & ((q_2))) # (\Data[0]~input_o  & (q_1))

	.dataa(!\Data[0]~input_o ),
	.datab(!\reg1|q [1]),
	.datac(!\reg1|q [2]),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\ShiftLeft0~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \ShiftLeft0~2 .extended_lut = "off";
defparam \ShiftLeft0~2 .lut_mask = 64'h1B1B1B1B1B1B1B1B;
defparam \ShiftLeft0~2 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux3~2 (
// Equation(s):
// \Mux3~2_combout  = ( q_3 & ( (!\Function[1]~input_o  & (!\Function[2]~input_o  & !\Function[0]~input_o )) ) ) # ( !q_3 & ( (!\Function[1]~input_o  & (!\Function[2]~input_o  & (\Data[3]~input_o  & !\Function[0]~input_o ))) ) )

	.dataa(!\Function[1]~input_o ),
	.datab(!\Function[2]~input_o ),
	.datac(!\Data[3]~input_o ),
	.datad(!\Function[0]~input_o ),
	.datae(!\reg1|q [3]),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux3~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux3~2 .extended_lut = "off";
defparam \Mux3~2 .lut_mask = 64'h0800880008008800;
defparam \Mux3~2 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux3~4 (
// Equation(s):
// \Mux3~4_combout  = ( c_out & ( \Mux3~2_combout  & ( (((\Data[1]~input_o  & \ShiftLeft0~2_combout )) # (q_2)) # (\Data[2]~input_o ) ) ) ) # ( !c_out & ( \Mux3~2_combout  & ( (!\Data[2]~input_o  & (\Data[1]~input_o  & (\ShiftLeft0~2_combout ))) # 
// (\Data[2]~input_o  & (((q_2)))) ) ) ) # ( c_out & ( !\Mux3~2_combout  & ( (\Data[1]~input_o  & (!\Data[2]~input_o  & \ShiftLeft0~2_combout )) ) ) ) # ( !c_out & ( !\Mux3~2_combout  & ( (\Data[1]~input_o  & (!\Data[2]~input_o  & \ShiftLeft0~2_combout )) ) 
// ) )

	.dataa(!\Data[1]~input_o ),
	.datab(!\Data[2]~input_o ),
	.datac(!\ShiftLeft0~2_combout ),
	.datad(!\reg1|q [2]),
	.datae(!\ripple1|adder2|c_out~0_combout ),
	.dataf(!\Mux3~2_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux3~4_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux3~4 .extended_lut = "off";
defparam \Mux3~4 .lut_mask = 64'h04040404043737FF;
defparam \Mux3~4 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux3~1 (
// Equation(s):
// \Mux3~1_combout  = (!\Function[1]~input_o  & (\Function[2]~input_o  & (!\Data[3]~input_o  & \Function[0]~input_o )))

	.dataa(!\Function[1]~input_o ),
	.datab(!\Function[2]~input_o ),
	.datac(!\Data[3]~input_o ),
	.datad(!\Function[0]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux3~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux3~1 .extended_lut = "off";
defparam \Mux3~1 .lut_mask = 64'h0020002000200020;
defparam \Mux3~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux3~10 (
// Equation(s):
// \Mux3~10_combout  = ( !\Data[0]~input_o  & ( (!\Mux3~4_combout  & (!\Data[1]~input_o  & (q_0 & (\Mux3~1_combout  & \Data[2]~input_o )))) # (\Mux3~4_combout  & ((((\Data[2]~input_o ) # (\Mux3~1_combout ))))) ) ) # ( \Data[0]~input_o  & ( (!\Data[2]~input_o 
//  & (\Mux3~1_combout  & (((!\Data[1]~input_o  & q_3)) # (\Mux3~4_combout )))) # (\Data[2]~input_o  & (((\Mux3~4_combout )))) ) )

	.dataa(!\Data[1]~input_o ),
	.datab(!\Mux3~4_combout ),
	.datac(!\reg1|q [3]),
	.datad(!\Mux3~1_combout ),
	.datae(!\Data[0]~input_o ),
	.dataf(!\Data[2]~input_o ),
	.datag(!\reg1|q [0]),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux3~10_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux3~10 .extended_lut = "on";
defparam \Mux3~10 .lut_mask = 64'h0033003B333B3333;
defparam \Mux3~10 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux3~0 (
// Equation(s):
// \Mux3~0_combout  = (!\Function[1]~input_o  & (!\Function[2]~input_o  & \Function[0]~input_o ))

	.dataa(!\Function[1]~input_o ),
	.datab(!\Function[2]~input_o ),
	.datac(!\Function[0]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux3~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux3~0 .extended_lut = "off";
defparam \Mux3~0 .lut_mask = 64'h0808080808080808;
defparam \Mux3~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Add0~17 (
// Equation(s):
// \Add0~17_sumout  = SUM(( GND ) + ( GND ) + ( \Add0~14  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~14 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~17_sumout ),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Add0~17 .extended_lut = "off";
defparam \Add0~17 .lut_mask = 64'h0000FFFF00000000;
defparam \Add0~17 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux3~5 (
// Equation(s):
// \Mux3~5_combout  = ( \Mux3~2_combout  & ( (!\Mux3~0_combout  & (((q_2 & c_out)))) # (\Mux3~0_combout  & (((q_2 & c_out)) # (\Add0~17_sumout ))) ) ) # ( !\Mux3~2_combout  & ( (\Mux3~0_combout  & \Add0~17_sumout ) ) )

	.dataa(!\Mux3~0_combout ),
	.datab(!\Add0~17_sumout ),
	.datac(!\reg1|q [2]),
	.datad(!\ripple1|adder2|c_out~0_combout ),
	.datae(!\Mux3~2_combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux3~5_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux3~5 .extended_lut = "off";
defparam \Mux3~5 .lut_mask = 64'h1111111F1111111F;
defparam \Mux3~5 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux2~0 (
// Equation(s):
// \Mux2~0_combout  = (\Function[1]~input_o  & \Function[2]~input_o )

	.dataa(!\Function[1]~input_o ),
	.datab(!\Function[2]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux2~0 .extended_lut = "off";
defparam \Mux2~0 .lut_mask = 64'h1111111111111111;
defparam \Mux2~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux3~6 (
// Equation(s):
// \Mux3~6_combout  = ( !\Function[0]~input_o  & ( ((((\Mult0~12  & \Mux2~0_combout )) # (\Mux3~5_combout )) # (\Mux3~10_combout )) # (\Mux3~3_combout ) ) ) # ( \Function[0]~input_o  & ( ((((q_4 & \Mux2~0_combout )) # (\Mux3~5_combout )) # (\Mux3~10_combout 
// )) # (\Mux3~3_combout ) ) )

	.dataa(!\Mux3~3_combout ),
	.datab(!\Mux3~10_combout ),
	.datac(!\reg1|q [4]),
	.datad(!\Mux3~5_combout ),
	.datae(!\Function[0]~input_o ),
	.dataf(!\Mux2~0_combout ),
	.datag(!\Mult0~12 ),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux3~6_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux3~6 .extended_lut = "on";
defparam \Mux3~6 .lut_mask = 64'h77FF77FF7FFF7FFF;
defparam \Mux3~6 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux2~2 (
// Equation(s):
// \Mux2~2_combout  = ( q_2 & ( q_3 & ( (!\Data[2]~input_o ) # ((!\Data[0]~input_o  & ((q_1))) # (\Data[0]~input_o  & (q_0))) ) ) ) # ( !q_2 & ( q_3 & ( (!\Data[0]~input_o  & (((!\Data[2]~input_o ) # (q_1)))) # (\Data[0]~input_o  & (q_0 & (\Data[2]~input_o 
// ))) ) ) ) # ( q_2 & ( !q_3 & ( (!\Data[0]~input_o  & (((\Data[2]~input_o  & q_1)))) # (\Data[0]~input_o  & (((!\Data[2]~input_o )) # (q_0))) ) ) ) # ( !q_2 & ( !q_3 & ( (\Data[2]~input_o  & ((!\Data[0]~input_o  & ((q_1))) # (\Data[0]~input_o  & (q_0)))) ) 
// ) )

	.dataa(!\reg1|q [0]),
	.datab(!\Data[0]~input_o ),
	.datac(!\Data[2]~input_o ),
	.datad(!\reg1|q [1]),
	.datae(!\reg1|q [2]),
	.dataf(!\reg1|q [3]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux2~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux2~2 .extended_lut = "off";
defparam \Mux2~2 .lut_mask = 64'h010D313DC1CDF1FD;
defparam \Mux2~2 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux2~3 (
// Equation(s):
// \Mux2~3_combout  = (\Mux3~1_combout  & (!\Data[1]~input_o  $ (!\Data[2]~input_o )))

	.dataa(!\Mux3~1_combout ),
	.datab(!\Data[1]~input_o ),
	.datac(!\Data[2]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux2~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux2~3 .extended_lut = "off";
defparam \Mux2~3 .lut_mask = 64'h1414141414141414;
defparam \Mux2~3 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux2~1 (
// Equation(s):
// \Mux2~1_combout  = ( \Mux2~2_combout  & ( \Mux2~3_combout  ) ) # ( !\Mux2~2_combout  & ( \Mux2~3_combout  & ( (\Mux2~0_combout  & ((!\Function[0]~input_o  & (\Mult0~13 )) # (\Function[0]~input_o  & ((q_5))))) ) ) ) # ( \Mux2~2_combout  & ( 
// !\Mux2~3_combout  & ( (\Mux2~0_combout  & ((!\Function[0]~input_o  & (\Mult0~13 )) # (\Function[0]~input_o  & ((q_5))))) ) ) ) # ( !\Mux2~2_combout  & ( !\Mux2~3_combout  & ( (\Mux2~0_combout  & ((!\Function[0]~input_o  & (\Mult0~13 )) # 
// (\Function[0]~input_o  & ((q_5))))) ) ) )

	.dataa(!\Mux2~0_combout ),
	.datab(!\Function[0]~input_o ),
	.datac(!\Mult0~13 ),
	.datad(!\reg1|q [5]),
	.datae(!\Mux2~2_combout ),
	.dataf(!\Mux2~3_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux2~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux2~1 .extended_lut = "off";
defparam \Mux2~1 .lut_mask = 64'h041504150415FFFF;
defparam \Mux2~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux1~1 (
// Equation(s):
// \Mux1~1_combout  = ( \Data[1]~input_o  & ( q_3 & ( (\Mux3~1_combout  & ((!\Data[2]~input_o  & ((\Data[0]~input_o ))) # (\Data[2]~input_o  & (\ShiftLeft0~0_combout )))) ) ) ) # ( !\Data[1]~input_o  & ( q_3 & ( (\Data[2]~input_o  & (\ShiftLeft0~0_combout  & 
// \Mux3~1_combout )) ) ) ) # ( \Data[1]~input_o  & ( !q_3 & ( (\Data[2]~input_o  & (\ShiftLeft0~0_combout  & \Mux3~1_combout )) ) ) ) # ( !\Data[1]~input_o  & ( !q_3 & ( (\Data[2]~input_o  & (\ShiftLeft0~0_combout  & \Mux3~1_combout )) ) ) )

	.dataa(!\Data[2]~input_o ),
	.datab(!\ShiftLeft0~0_combout ),
	.datac(!\Mux3~1_combout ),
	.datad(!\Data[0]~input_o ),
	.datae(!\Data[1]~input_o ),
	.dataf(!\reg1|q [3]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux1~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux1~1 .extended_lut = "off";
defparam \Mux1~1 .lut_mask = 64'h010101010101010B;
defparam \Mux1~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux1~0 (
// Equation(s):
// \Mux1~0_combout  = ( q_6 & ( \Mux1~1_combout  ) ) # ( !q_6 & ( \Mux1~1_combout  ) ) # ( q_6 & ( !\Mux1~1_combout  & ( (\Function[1]~input_o  & (\Function[2]~input_o  & ((\Mult0~14 ) # (\Function[0]~input_o )))) ) ) ) # ( !q_6 & ( !\Mux1~1_combout  & ( 
// (\Function[1]~input_o  & (\Function[2]~input_o  & (!\Function[0]~input_o  & \Mult0~14 ))) ) ) )

	.dataa(!\Function[1]~input_o ),
	.datab(!\Function[2]~input_o ),
	.datac(!\Function[0]~input_o ),
	.datad(!\Mult0~14 ),
	.datae(!\reg1|q [6]),
	.dataf(!\Mux1~1_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux1~0 .extended_lut = "off";
defparam \Mux1~0 .lut_mask = 64'h00100111FFFFFFFF;
defparam \Mux1~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux0~0 (
// Equation(s):
// \Mux0~0_combout  = ( \Function[0]~input_o  & ( (!\Function[1]~input_o  & (\Function[2]~input_o  & (\Data[2]~input_o  & !\Data[3]~input_o ))) ) )

	.dataa(!\Function[1]~input_o ),
	.datab(!\Function[2]~input_o ),
	.datac(!\Data[2]~input_o ),
	.datad(!\Data[3]~input_o ),
	.datae(!\Function[0]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux0~0 .extended_lut = "off";
defparam \Mux0~0 .lut_mask = 64'h0000020000000200;
defparam \Mux0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Mux0~1 (
// Equation(s):
// \Mux0~1_combout  = ( \Mux0~0_combout  & ( q_7 & ( ((\Mux2~0_combout  & ((\Mult0~15 ) # (\Function[0]~input_o )))) # (\ShiftLeft0~1_combout ) ) ) ) # ( !\Mux0~0_combout  & ( q_7 & ( (\Mux2~0_combout  & ((\Mult0~15 ) # (\Function[0]~input_o ))) ) ) ) # ( 
// \Mux0~0_combout  & ( !q_7 & ( ((!\Function[0]~input_o  & (\Mult0~15  & \Mux2~0_combout ))) # (\ShiftLeft0~1_combout ) ) ) ) # ( !\Mux0~0_combout  & ( !q_7 & ( (!\Function[0]~input_o  & (\Mult0~15  & \Mux2~0_combout )) ) ) )

	.dataa(!\Function[0]~input_o ),
	.datab(!\Mult0~15 ),
	.datac(!\ShiftLeft0~1_combout ),
	.datad(!\Mux2~0_combout ),
	.datae(!\Mux0~0_combout ),
	.dataf(!\reg1|q [7]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Mux0~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Mux0~1 .extended_lut = "off";
defparam \Mux0~1 .lut_mask = 64'h00220F2F00770F7F;
defparam \Mux0~1 .shared_arith = "off";
// synopsys translate_on

endmodule

module RCA (
	q_1,
	q_0,
	c_out,
	Data_0,
	Data_1,
	devpor,
	devclrn,
	devoe);
input 	q_1;
input 	q_0;
output 	c_out;
input 	Data_0;
input 	Data_1;
input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;



FA_1 adder2(
	.q_1(q_1),
	.q_0(q_0),
	.c_out(c_out),
	.Data_0(Data_0),
	.Data_1(Data_1),
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

endmodule

module FA_1 (
	q_1,
	q_0,
	c_out,
	Data_0,
	Data_1,
	devpor,
	devclrn,
	devoe);
input 	q_1;
input 	q_0;
output 	c_out;
input 	Data_0;
input 	Data_1;
input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;



cyclonev_lcell_comb \c_out~0 (
// Equation(s):
// c_out = (!\Data[1]~input_o  & (q_0 & (\Data[0]~input_o  & q_1))) # (\Data[1]~input_o  & (((q_0 & \Data[0]~input_o )) # (q_1)))

	.dataa(!q_0),
	.datab(!Data_0),
	.datac(!Data_1),
	.datad(!q_1),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(c_out),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \c_out~0 .extended_lut = "off";
defparam \c_out~0 .lut_mask = 64'h011F011F011F011F;
defparam \c_out~0 .shared_arith = "off";
// synopsys translate_on

endmodule

module reg8_bits (
	q_1,
	q_2,
	q_3,
	q_0,
	q_4,
	q_5,
	q_6,
	q_7,
	Mux3,
	Mux4,
	Mux5,
	Mux6,
	Mux7,
	Mux2,
	Mux1,
	Mux0,
	Clock,
	Reset_b_0,
	Reset_b_1,
	Reset_b_2,
	devpor,
	devclrn,
	devoe);
output 	q_1;
output 	q_2;
output 	q_3;
output 	q_0;
output 	q_4;
output 	q_5;
output 	q_6;
output 	q_7;
input 	Mux3;
input 	Mux4;
input 	Mux5;
input 	Mux6;
input 	Mux7;
input 	Mux2;
input 	Mux1;
input 	Mux0;
input 	Clock;
input 	Reset_b_0;
input 	Reset_b_1;
input 	Reset_b_2;
input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \Equal0~0_combout ;


dffeas \q[1] (
	.clk(Clock),
	.d(Mux6),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(q_1),
	.prn(vcc));
// synopsys translate_off
defparam \q[1] .is_wysiwyg = "true";
defparam \q[1] .power_up = "low";
// synopsys translate_on

dffeas \q[2] (
	.clk(Clock),
	.d(Mux5),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(q_2),
	.prn(vcc));
// synopsys translate_off
defparam \q[2] .is_wysiwyg = "true";
defparam \q[2] .power_up = "low";
// synopsys translate_on

dffeas \q[3] (
	.clk(Clock),
	.d(Mux4),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(q_3),
	.prn(vcc));
// synopsys translate_off
defparam \q[3] .is_wysiwyg = "true";
defparam \q[3] .power_up = "low";
// synopsys translate_on

dffeas \q[0] (
	.clk(Clock),
	.d(Mux7),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(q_0),
	.prn(vcc));
// synopsys translate_off
defparam \q[0] .is_wysiwyg = "true";
defparam \q[0] .power_up = "low";
// synopsys translate_on

dffeas \q[4] (
	.clk(Clock),
	.d(Mux3),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(q_4),
	.prn(vcc));
// synopsys translate_off
defparam \q[4] .is_wysiwyg = "true";
defparam \q[4] .power_up = "low";
// synopsys translate_on

dffeas \q[5] (
	.clk(Clock),
	.d(Mux2),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(q_5),
	.prn(vcc));
// synopsys translate_off
defparam \q[5] .is_wysiwyg = "true";
defparam \q[5] .power_up = "low";
// synopsys translate_on

dffeas \q[6] (
	.clk(Clock),
	.d(Mux1),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(q_6),
	.prn(vcc));
// synopsys translate_off
defparam \q[6] .is_wysiwyg = "true";
defparam \q[6] .power_up = "low";
// synopsys translate_on

dffeas \q[7] (
	.clk(Clock),
	.d(Mux0),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\Equal0~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(q_7),
	.prn(vcc));
// synopsys translate_off
defparam \q[7] .is_wysiwyg = "true";
defparam \q[7] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (!\Reset_b[0]~input_o  & (!\Reset_b[1]~input_o  & !\Reset_b[2]~input_o ))

	.dataa(!Reset_b_0),
	.datab(!Reset_b_1),
	.datac(!Reset_b_2),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal0~0 .extended_lut = "off";
defparam \Equal0~0 .lut_mask = 64'h8080808080808080;
defparam \Equal0~0 .shared_arith = "off";
// synopsys translate_on

endmodule
