// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.0.0 Build 614 04/24/2018 SJ Lite Edition"

// DATE "11/22/2021 02:07:55"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module part3 (
	Clock,
	Resetn,
	Go,
	Divisor,
	Dividend,
	Quotient,
	Remainder);
input 	Clock;
input 	Resetn;
input 	Go;
input 	[3:0] Divisor;
input 	[3:0] Dividend;
output 	[3:0] Quotient;
output 	[3:0] Remainder;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Mult0~8 ;
wire \Mult0~9 ;
wire \Mult0~10 ;
wire \Mult0~11 ;
wire \Mult0~12 ;
wire \Mult0~13 ;
wire \Mult0~14 ;
wire \Mult0~15 ;
wire \Mult0~16 ;
wire \Mult0~17 ;
wire \Mult0~18 ;
wire \Mult0~19 ;
wire \Mult0~20 ;
wire \Mult0~21 ;
wire \Mult0~22 ;
wire \Mult0~23 ;
wire \Mult0~24 ;
wire \Mult0~25 ;
wire \Mult0~26 ;
wire \Mult0~27 ;
wire \Mult0~28 ;
wire \Mult0~29 ;
wire \Mult0~30 ;
wire \Mult0~31 ;
wire \Mult0~32 ;
wire \Mult0~33 ;
wire \Mult0~34 ;
wire \Mult0~35 ;
wire \Mult0~36 ;
wire \Mult0~37 ;
wire \Mult0~38 ;
wire \Mult0~39 ;
wire \Mult0~40 ;
wire \Mult0~41 ;
wire \Mult0~42 ;
wire \Mult0~43 ;
wire \Mult0~44 ;
wire \Mult0~45 ;
wire \Mult0~46 ;
wire \Mult0~47 ;
wire \Mult0~48 ;
wire \Mult0~49 ;
wire \Mult0~50 ;
wire \Mult0~51 ;
wire \Mult0~52 ;
wire \Mult0~53 ;
wire \Mult0~54 ;
wire \Mult0~55 ;
wire \Mult0~56 ;
wire \Mult0~57 ;
wire \Mult0~58 ;
wire \Mult0~59 ;
wire \Mult0~60 ;
wire \Mult0~61 ;
wire \Mult0~62 ;
wire \Mult0~63 ;
wire \Mult0~64 ;
wire \Mult0~65 ;
wire \Mult0~66 ;
wire \Mult0~67 ;
wire \Clock~input_o ;
wire \Resetn~input_o ;
wire \Divisor[0]~input_o ;
wire \Dividend[0]~input_o ;
wire \Quotient~0_combout ;
wire \Go~input_o ;
wire \Quotient[0]~1_combout ;
wire \Quotient[0]~reg0_q ;
wire \Quotient~2_combout ;
wire \Quotient[1]~reg0_q ;
wire \Divisor[1]~input_o ;
wire \Divisor[2]~input_o ;
wire \Divisor[3]~input_o ;
wire \Add6~0_combout ;
wire \Dividend[1]~input_o ;
wire \Dividend[2]~input_o ;
wire \Dividend[3]~input_o ;
wire \Mult0~mac_resulta ;
wire \Remainder~0_combout ;
wire \Remainder[0]~reg0_q ;
wire \Mult0~337 ;
wire \Remainder~1_combout ;
wire \Remainder[1]~reg0_q ;
wire \Mult0~338 ;
wire \Remainder~2_combout ;
wire \Remainder[2]~reg0_q ;
wire \Mult0~339 ;
wire \Remainder~3_combout ;
wire \Remainder[3]~reg0_q ;

wire [63:0] \Mult0~mac_RESULTA_bus ;

assign \Mult0~mac_resulta  = \Mult0~mac_RESULTA_bus [0];
assign \Mult0~337  = \Mult0~mac_RESULTA_bus [1];
assign \Mult0~338  = \Mult0~mac_RESULTA_bus [2];
assign \Mult0~339  = \Mult0~mac_RESULTA_bus [3];
assign \Mult0~8  = \Mult0~mac_RESULTA_bus [4];
assign \Mult0~9  = \Mult0~mac_RESULTA_bus [5];
assign \Mult0~10  = \Mult0~mac_RESULTA_bus [6];
assign \Mult0~11  = \Mult0~mac_RESULTA_bus [7];
assign \Mult0~12  = \Mult0~mac_RESULTA_bus [8];
assign \Mult0~13  = \Mult0~mac_RESULTA_bus [9];
assign \Mult0~14  = \Mult0~mac_RESULTA_bus [10];
assign \Mult0~15  = \Mult0~mac_RESULTA_bus [11];
assign \Mult0~16  = \Mult0~mac_RESULTA_bus [12];
assign \Mult0~17  = \Mult0~mac_RESULTA_bus [13];
assign \Mult0~18  = \Mult0~mac_RESULTA_bus [14];
assign \Mult0~19  = \Mult0~mac_RESULTA_bus [15];
assign \Mult0~20  = \Mult0~mac_RESULTA_bus [16];
assign \Mult0~21  = \Mult0~mac_RESULTA_bus [17];
assign \Mult0~22  = \Mult0~mac_RESULTA_bus [18];
assign \Mult0~23  = \Mult0~mac_RESULTA_bus [19];
assign \Mult0~24  = \Mult0~mac_RESULTA_bus [20];
assign \Mult0~25  = \Mult0~mac_RESULTA_bus [21];
assign \Mult0~26  = \Mult0~mac_RESULTA_bus [22];
assign \Mult0~27  = \Mult0~mac_RESULTA_bus [23];
assign \Mult0~28  = \Mult0~mac_RESULTA_bus [24];
assign \Mult0~29  = \Mult0~mac_RESULTA_bus [25];
assign \Mult0~30  = \Mult0~mac_RESULTA_bus [26];
assign \Mult0~31  = \Mult0~mac_RESULTA_bus [27];
assign \Mult0~32  = \Mult0~mac_RESULTA_bus [28];
assign \Mult0~33  = \Mult0~mac_RESULTA_bus [29];
assign \Mult0~34  = \Mult0~mac_RESULTA_bus [30];
assign \Mult0~35  = \Mult0~mac_RESULTA_bus [31];
assign \Mult0~36  = \Mult0~mac_RESULTA_bus [32];
assign \Mult0~37  = \Mult0~mac_RESULTA_bus [33];
assign \Mult0~38  = \Mult0~mac_RESULTA_bus [34];
assign \Mult0~39  = \Mult0~mac_RESULTA_bus [35];
assign \Mult0~40  = \Mult0~mac_RESULTA_bus [36];
assign \Mult0~41  = \Mult0~mac_RESULTA_bus [37];
assign \Mult0~42  = \Mult0~mac_RESULTA_bus [38];
assign \Mult0~43  = \Mult0~mac_RESULTA_bus [39];
assign \Mult0~44  = \Mult0~mac_RESULTA_bus [40];
assign \Mult0~45  = \Mult0~mac_RESULTA_bus [41];
assign \Mult0~46  = \Mult0~mac_RESULTA_bus [42];
assign \Mult0~47  = \Mult0~mac_RESULTA_bus [43];
assign \Mult0~48  = \Mult0~mac_RESULTA_bus [44];
assign \Mult0~49  = \Mult0~mac_RESULTA_bus [45];
assign \Mult0~50  = \Mult0~mac_RESULTA_bus [46];
assign \Mult0~51  = \Mult0~mac_RESULTA_bus [47];
assign \Mult0~52  = \Mult0~mac_RESULTA_bus [48];
assign \Mult0~53  = \Mult0~mac_RESULTA_bus [49];
assign \Mult0~54  = \Mult0~mac_RESULTA_bus [50];
assign \Mult0~55  = \Mult0~mac_RESULTA_bus [51];
assign \Mult0~56  = \Mult0~mac_RESULTA_bus [52];
assign \Mult0~57  = \Mult0~mac_RESULTA_bus [53];
assign \Mult0~58  = \Mult0~mac_RESULTA_bus [54];
assign \Mult0~59  = \Mult0~mac_RESULTA_bus [55];
assign \Mult0~60  = \Mult0~mac_RESULTA_bus [56];
assign \Mult0~61  = \Mult0~mac_RESULTA_bus [57];
assign \Mult0~62  = \Mult0~mac_RESULTA_bus [58];
assign \Mult0~63  = \Mult0~mac_RESULTA_bus [59];
assign \Mult0~64  = \Mult0~mac_RESULTA_bus [60];
assign \Mult0~65  = \Mult0~mac_RESULTA_bus [61];
assign \Mult0~66  = \Mult0~mac_RESULTA_bus [62];
assign \Mult0~67  = \Mult0~mac_RESULTA_bus [63];

cyclonev_io_obuf \Quotient[0]~output (
	.i(\Quotient[0]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(Quotient[0]),
	.obar());
// synopsys translate_off
defparam \Quotient[0]~output .bus_hold = "false";
defparam \Quotient[0]~output .open_drain_output = "false";
defparam \Quotient[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Quotient[1]~output (
	.i(\Quotient[1]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(Quotient[1]),
	.obar());
// synopsys translate_off
defparam \Quotient[1]~output .bus_hold = "false";
defparam \Quotient[1]~output .open_drain_output = "false";
defparam \Quotient[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Quotient[2]~output (
	.i(\Quotient[1]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(Quotient[2]),
	.obar());
// synopsys translate_off
defparam \Quotient[2]~output .bus_hold = "false";
defparam \Quotient[2]~output .open_drain_output = "false";
defparam \Quotient[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Quotient[3]~output (
	.i(\Quotient[1]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(Quotient[3]),
	.obar());
// synopsys translate_off
defparam \Quotient[3]~output .bus_hold = "false";
defparam \Quotient[3]~output .open_drain_output = "false";
defparam \Quotient[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Remainder[0]~output (
	.i(\Remainder[0]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(Remainder[0]),
	.obar());
// synopsys translate_off
defparam \Remainder[0]~output .bus_hold = "false";
defparam \Remainder[0]~output .open_drain_output = "false";
defparam \Remainder[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Remainder[1]~output (
	.i(\Remainder[1]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(Remainder[1]),
	.obar());
// synopsys translate_off
defparam \Remainder[1]~output .bus_hold = "false";
defparam \Remainder[1]~output .open_drain_output = "false";
defparam \Remainder[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Remainder[2]~output (
	.i(\Remainder[2]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(Remainder[2]),
	.obar());
// synopsys translate_off
defparam \Remainder[2]~output .bus_hold = "false";
defparam \Remainder[2]~output .open_drain_output = "false";
defparam \Remainder[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Remainder[3]~output (
	.i(\Remainder[3]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(Remainder[3]),
	.obar());
// synopsys translate_off
defparam \Remainder[3]~output .bus_hold = "false";
defparam \Remainder[3]~output .open_drain_output = "false";
defparam \Remainder[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \Clock~input (
	.i(Clock),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Clock~input_o ));
// synopsys translate_off
defparam \Clock~input .bus_hold = "false";
defparam \Clock~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Resetn~input (
	.i(Resetn),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Resetn~input_o ));
// synopsys translate_off
defparam \Resetn~input .bus_hold = "false";
defparam \Resetn~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Divisor[0]~input (
	.i(Divisor[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Divisor[0]~input_o ));
// synopsys translate_off
defparam \Divisor[0]~input .bus_hold = "false";
defparam \Divisor[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Dividend[0]~input (
	.i(Dividend[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Dividend[0]~input_o ));
// synopsys translate_off
defparam \Dividend[0]~input .bus_hold = "false";
defparam \Dividend[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Quotient~0 (
// Equation(s):
// \Quotient~0_combout  = (!\Resetn~input_o  & ((!\Divisor[0]~input_o ) # (\Dividend[0]~input_o )))

	.dataa(!\Resetn~input_o ),
	.datab(!\Divisor[0]~input_o ),
	.datac(!\Dividend[0]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Quotient~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Quotient~0 .extended_lut = "off";
defparam \Quotient~0 .lut_mask = 64'h8A8A8A8A8A8A8A8A;
defparam \Quotient~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \Go~input (
	.i(Go),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Go~input_o ));
// synopsys translate_off
defparam \Go~input .bus_hold = "false";
defparam \Go~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Quotient[0]~1 (
// Equation(s):
// \Quotient[0]~1_combout  = (\Go~input_o ) # (\Resetn~input_o )

	.dataa(!\Resetn~input_o ),
	.datab(!\Go~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Quotient[0]~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Quotient[0]~1 .extended_lut = "off";
defparam \Quotient[0]~1 .lut_mask = 64'h7777777777777777;
defparam \Quotient[0]~1 .shared_arith = "off";
// synopsys translate_on

dffeas \Quotient[0]~reg0 (
	.clk(\Clock~input_o ),
	.d(\Quotient~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Quotient[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Quotient[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Quotient[0]~reg0 .is_wysiwyg = "true";
defparam \Quotient[0]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Quotient~2 (
// Equation(s):
// \Quotient~2_combout  = (!\Resetn~input_o  & !\Divisor[0]~input_o )

	.dataa(!\Resetn~input_o ),
	.datab(!\Divisor[0]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Quotient~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Quotient~2 .extended_lut = "off";
defparam \Quotient~2 .lut_mask = 64'h8888888888888888;
defparam \Quotient~2 .shared_arith = "off";
// synopsys translate_on

dffeas \Quotient[1]~reg0 (
	.clk(\Clock~input_o ),
	.d(\Quotient~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Quotient[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Quotient[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Quotient[1]~reg0 .is_wysiwyg = "true";
defparam \Quotient[1]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \Divisor[1]~input (
	.i(Divisor[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Divisor[1]~input_o ));
// synopsys translate_off
defparam \Divisor[1]~input .bus_hold = "false";
defparam \Divisor[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Divisor[2]~input (
	.i(Divisor[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Divisor[2]~input_o ));
// synopsys translate_off
defparam \Divisor[2]~input .bus_hold = "false";
defparam \Divisor[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Divisor[3]~input (
	.i(Divisor[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Divisor[3]~input_o ));
// synopsys translate_off
defparam \Divisor[3]~input .bus_hold = "false";
defparam \Divisor[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Add6~0 (
// Equation(s):
// \Add6~0_combout  = (!\Divisor[0]~input_o ) # (\Dividend[0]~input_o )

	.dataa(!\Divisor[0]~input_o ),
	.datab(!\Dividend[0]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Add6~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Add6~0 .extended_lut = "off";
defparam \Add6~0 .lut_mask = 64'hBBBBBBBBBBBBBBBB;
defparam \Add6~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \Dividend[1]~input (
	.i(Dividend[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Dividend[1]~input_o ));
// synopsys translate_off
defparam \Dividend[1]~input .bus_hold = "false";
defparam \Dividend[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Dividend[2]~input (
	.i(Dividend[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Dividend[2]~input_o ));
// synopsys translate_off
defparam \Dividend[2]~input .bus_hold = "false";
defparam \Dividend[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Dividend[3]~input (
	.i(Dividend[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Dividend[3]~input_o ));
// synopsys translate_off
defparam \Dividend[3]~input .bus_hold = "false";
defparam \Dividend[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_mac \Mult0~mac (
	.sub(vcc),
	.negate(gnd),
	.accumulate(gnd),
	.loadconst(gnd),
	.ax({\Divisor[3]~input_o ,\Divisor[2]~input_o ,\Divisor[1]~input_o ,\Divisor[0]~input_o }),
	.ay({!\Divisor[0]~input_o ,!\Divisor[0]~input_o ,!\Divisor[0]~input_o ,\Add6~0_combout }),
	.az(26'b00000000000000000000000000),
	.bx({\Dividend[3]~input_o }),
	.by({\Dividend[3]~input_o ,\Dividend[3]~input_o ,\Dividend[3]~input_o ,\Dividend[3]~input_o ,\Dividend[3]~input_o ,\Dividend[3]~input_o ,\Dividend[3]~input_o ,\Dividend[3]~input_o ,\Dividend[3]~input_o ,\Dividend[3]~input_o ,\Dividend[3]~input_o ,\Dividend[3]~input_o ,
\Dividend[3]~input_o ,\Dividend[3]~input_o ,\Dividend[3]~input_o ,\Dividend[2]~input_o ,\Dividend[1]~input_o ,\Dividend[0]~input_o }),
	.bz(18'b000000000000000000),
	.coefsela(3'b000),
	.coefselb(3'b000),
	.clk(3'b000),
	.aclr(2'b00),
	.ena(3'b111),
	.scanin(27'b000000000000000000000000000),
	.chainin(1'b0),
	.dftout(),
	.resulta(\Mult0~mac_RESULTA_bus ),
	.resultb(),
	.scanout(),
	.chainout());
// synopsys translate_off
defparam \Mult0~mac .accumulate_clock = "none";
defparam \Mult0~mac .ax_clock = "none";
defparam \Mult0~mac .ax_width = 4;
defparam \Mult0~mac .ay_scan_in_clock = "none";
defparam \Mult0~mac .ay_scan_in_width = 4;
defparam \Mult0~mac .ay_use_scan_in = "false";
defparam \Mult0~mac .az_clock = "none";
defparam \Mult0~mac .bx_clock = "none";
defparam \Mult0~mac .bx_width = 1;
defparam \Mult0~mac .by_clock = "none";
defparam \Mult0~mac .by_use_scan_in = "false";
defparam \Mult0~mac .by_width = 18;
defparam \Mult0~mac .bz_clock = "none";
defparam \Mult0~mac .coef_a_0 = 0;
defparam \Mult0~mac .coef_a_1 = 0;
defparam \Mult0~mac .coef_a_2 = 0;
defparam \Mult0~mac .coef_a_3 = 0;
defparam \Mult0~mac .coef_a_4 = 0;
defparam \Mult0~mac .coef_a_5 = 0;
defparam \Mult0~mac .coef_a_6 = 0;
defparam \Mult0~mac .coef_a_7 = 0;
defparam \Mult0~mac .coef_b_0 = 0;
defparam \Mult0~mac .coef_b_1 = 0;
defparam \Mult0~mac .coef_b_2 = 0;
defparam \Mult0~mac .coef_b_3 = 0;
defparam \Mult0~mac .coef_b_4 = 0;
defparam \Mult0~mac .coef_b_5 = 0;
defparam \Mult0~mac .coef_b_6 = 0;
defparam \Mult0~mac .coef_b_7 = 0;
defparam \Mult0~mac .coef_sel_a_clock = "none";
defparam \Mult0~mac .coef_sel_b_clock = "none";
defparam \Mult0~mac .delay_scan_out_ay = "false";
defparam \Mult0~mac .delay_scan_out_by = "false";
defparam \Mult0~mac .enable_double_accum = "false";
defparam \Mult0~mac .load_const_clock = "none";
defparam \Mult0~mac .load_const_value = 0;
defparam \Mult0~mac .mode_sub_location = 0;
defparam \Mult0~mac .negate_clock = "none";
defparam \Mult0~mac .operand_source_max = "input";
defparam \Mult0~mac .operand_source_may = "input";
defparam \Mult0~mac .operand_source_mbx = "input";
defparam \Mult0~mac .operand_source_mby = "input";
defparam \Mult0~mac .operation_mode = "m18x18_plus36";
defparam \Mult0~mac .output_clock = "none";
defparam \Mult0~mac .preadder_subtract_a = "false";
defparam \Mult0~mac .preadder_subtract_b = "false";
defparam \Mult0~mac .result_a_width = 64;
defparam \Mult0~mac .signed_max = "false";
defparam \Mult0~mac .signed_may = "false";
defparam \Mult0~mac .signed_mbx = "true";
defparam \Mult0~mac .signed_mby = "false";
defparam \Mult0~mac .sub_clock = "none";
defparam \Mult0~mac .use_chainadder = "false";
// synopsys translate_on

cyclonev_lcell_comb \Remainder~0 (
// Equation(s):
// \Remainder~0_combout  = (!\Resetn~input_o  & \Mult0~mac_resulta )

	.dataa(!\Resetn~input_o ),
	.datab(!\Mult0~mac_resulta ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Remainder~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Remainder~0 .extended_lut = "off";
defparam \Remainder~0 .lut_mask = 64'h2222222222222222;
defparam \Remainder~0 .shared_arith = "off";
// synopsys translate_on

dffeas \Remainder[0]~reg0 (
	.clk(\Clock~input_o ),
	.d(\Remainder~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Quotient[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Remainder[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Remainder[0]~reg0 .is_wysiwyg = "true";
defparam \Remainder[0]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Remainder~1 (
// Equation(s):
// \Remainder~1_combout  = (!\Resetn~input_o  & \Mult0~337 )

	.dataa(!\Resetn~input_o ),
	.datab(!\Mult0~337 ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Remainder~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Remainder~1 .extended_lut = "off";
defparam \Remainder~1 .lut_mask = 64'h2222222222222222;
defparam \Remainder~1 .shared_arith = "off";
// synopsys translate_on

dffeas \Remainder[1]~reg0 (
	.clk(\Clock~input_o ),
	.d(\Remainder~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Quotient[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Remainder[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Remainder[1]~reg0 .is_wysiwyg = "true";
defparam \Remainder[1]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Remainder~2 (
// Equation(s):
// \Remainder~2_combout  = (!\Resetn~input_o  & \Mult0~338 )

	.dataa(!\Resetn~input_o ),
	.datab(!\Mult0~338 ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Remainder~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Remainder~2 .extended_lut = "off";
defparam \Remainder~2 .lut_mask = 64'h2222222222222222;
defparam \Remainder~2 .shared_arith = "off";
// synopsys translate_on

dffeas \Remainder[2]~reg0 (
	.clk(\Clock~input_o ),
	.d(\Remainder~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Quotient[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Remainder[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Remainder[2]~reg0 .is_wysiwyg = "true";
defparam \Remainder[2]~reg0 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Remainder~3 (
// Equation(s):
// \Remainder~3_combout  = (!\Resetn~input_o  & \Mult0~339 )

	.dataa(!\Resetn~input_o ),
	.datab(!\Mult0~339 ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Remainder~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Remainder~3 .extended_lut = "off";
defparam \Remainder~3 .lut_mask = 64'h2222222222222222;
defparam \Remainder~3 .shared_arith = "off";
// synopsys translate_on

dffeas \Remainder[3]~reg0 (
	.clk(\Clock~input_o ),
	.d(\Remainder~3_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Quotient[0]~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Remainder[3]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Remainder[3]~reg0 .is_wysiwyg = "true";
defparam \Remainder[3]~reg0 .power_up = "low";
// synopsys translate_on

endmodule
